{"version":3,"sources":["App.module.css","Components/Contacts/Contacts.module.css","Components/Filter/Filter.module.css","redux/phonebook-actions.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","Components/Form/Form.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","addContacts","createAction","newContact","payload","id","shortid","generate","deleteContacts","onChangeFilter","connect","state","phonebook","filter","contacts","normalizeFilter","toLowerCase","trim","contact","name","includes","filteredContacts","dispatch","onClick","phonebookActions","className","s","list","map","number","item","type","button","onChange","e","target","value","filterId","htmlFor","label","pattern","title","required","input","Form","nameId","numberId","handleSubmit","preventDefault","props","onSubmit","resetFormInput","hadleAddValue","currentTarget","setState","this","form","Component","actions","App","createReducer","find","alert","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b03f7dff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__oYhHD\",\"title\":\"App_title__1KR8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2AL14\",\"item\":\"Contacts_item__mTJft\",\"button\":\"Contacts_button__1wLdK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Gfon\",\"input\":\"Filter_input__10xSn\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nconst addContacts = createAction(\"contacts / add\", (newContact) => {\r\n  return {\r\n    payload: {\r\n      id: shortid.generate(),\r\n      ...newContact,\r\n    },\r\n  };\r\n});\r\nconst deleteContacts = createAction(\"contacts / delete\");\r\nconst onChangeFilter = createAction(\"contacts / changeFilter\");\r\n\r\n// eslint-disable-next-line\r\nexport default { addContacts, deleteContacts, onChangeFilter };\r\n\r\n// const addContacts = (newContact) => ({\r\n//   type: phonebookActionsTypes.ADD,\r\n// payload: {\r\n//   id: shortid.generate(),\r\n//   ...newContact,\r\n// },\r\n// });\r\n\r\n// const onChangeFilter = (value) => ({\r\n//   type: phonebookActionsTypes.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n// const deleteContacts = (contactId) => ({\r\n//   type: phonebookActionsTypes.DELETE,\r\n//   payload: contactId,\r\n// });\r\n","import s from \"../Contacts/Contacts.module.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookActions from \"../../redux/phonebook-actions\";\r\n\r\nfunction Contacts({ contacts, onClick }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map((contact) => {\r\n        const { id, name, number } = contact;\r\n        return (\r\n          <li key={id} className={s.item}>\r\n            {name}: {number}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onClick(id)}\r\n              className={s.button}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { filter, contacts } = state.phonebook;\r\n  const filteredContacts = () => {\r\n    const normalizeFilter = filter.toLowerCase().trim();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizeFilter)\r\n    );\r\n  };\r\n  const filteredContact = filteredContacts();\r\n\r\n  return {\r\n    contacts: filteredContact,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onClick: (id) => dispatch(phonebookActions.deleteContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../Filter/Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookActions from \"../../redux/phonebook-actions\";\r\n\r\nfunction Filter({ filter, onChange }) {\r\n  const filterId = shortid.generate();\r\n  return (\r\n    <label htmlFor={filterId} className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        id={filterId}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={filter}\r\n        onChange={onChange}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.phonebook.filter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(phonebookActions.onChangeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport actions from \"../../redux/phonebook-actions\";\r\nimport s from \"../Form/Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameId = shortid.generate();\r\n  numberId = shortid.generate();\r\n\r\n  resetFormInput() {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetFormInput();\r\n  };\r\n  hadleAddValue = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label htmlFor={this.nameId} className={s.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          id={this.nameId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.hadleAddValue}\r\n          className={s.input}\r\n        />\r\n        <label htmlFor={this.numberId} className={s.label}>\r\n          Number\r\n        </label>\r\n        <input\r\n          id={this.numberId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={this.state.number}\r\n          onChange={this.hadleAddValue}\r\n          className={s.input}\r\n        />\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (newContact) => dispatch(actions.addContacts(newContact)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import s from \"./App.module.css\";\r\nimport Contacts from \"./Components/Contacts/Contacts\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport Form from \"./Components/Form/Form\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={s.App}>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <Form />\r\n      <h2 className={s.title}>Contacts:</h2>\r\n      <Filter />\r\n      <Contacts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport phonebookActions from \"../redux/phonebook-actions\";\r\n\r\nconst contacts = createReducer([], {\r\n  [phonebookActions.addContacts]: (state, { payload }) => {\r\n    if (state.find((contact) => contact.name === payload.name)) {\r\n      alert(`${payload.name} is already created!`);\r\n      return state;\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [phonebookActions.deleteContacts]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [phonebookActions.onChangeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n\r\n// const contacts = (state = initialContactsState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case phonebookActionsTypes.ADD:\r\n//       if (state.find((contact) => contact.name === payload.name)) {\r\n//         alert(`${payload.name} is already created!`);\r\n//         return state;\r\n//       }\r\n//       return [...state, payload];\r\n\r\n//     case phonebookActionsTypes.DELETE:\r\n//       return state.filter((contact) => contact.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case phonebookActionsTypes.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const initialContactsState = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./phonebook-reducer\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"currentContacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3ralA\",\"label\":\"Form_label__1ahsT\",\"input\":\"Form_input__17Iq2\",\"button\":\"Form_button__3tZvx\"};"],"sourceRoot":""}